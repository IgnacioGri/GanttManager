Tengo un problema con esta app de Gantt, quiero que haya un boton que al apretarlo oculte los fin de semanas y feriados argentinos del Gantt, mi programador me hace cambios, me dice que ya esta y cuando lo pruebo nunca esta, podrias analizar el codigo y ver bien cual es el problema?

20 references
Copilot said: El problema parece estar en cómo se
El problema parece estar en cómo se está armando la lista de días a ignorar ("ignoreList") al inicializar el gráfico. En el código actual se tiene esta lógica en el componente GanttChart:

TSX
const ignoreList = showWeekends ? getArgentineHolidays() : ['weekend', ...getArgentineHolidays()];
Esto implica lo siguiente: • Si showWeekends es true, la lista de ignorados contiene únicamente las fechas de feriados argentinos, por lo que los fines de semana se muestran. • Si showWeekends es false, se le agrega el string 'weekend' a la lista, lo que (presumiblemente) indica al Gantt que debe ignorar los fines de semana.

Sin embargo, la interfaz del botón muestra: • Cuando showWeekends es true el botón dice "Hide Weekends", es decir, se espera ocultar los fines de semana. • Cuando showWeekends es false el botón dice "Show Weekends".

Esto lleva a la conclusión de que la interpretación de la variable está invertida o resultando confusa:
– Por lo general, esperaríamos que si showWeekends es true se muestren (y que no se ignoren) y si es false se oculten (es decir, se ignore el fin de semana).
– El código de ignoreList está haciendo justamente lo opuesto: cuando showWeekends es true se retorna solo la lista de feriados (por tanto se muestran los fines de semana) y cuando es false se agrega 'weekend', haciendo que se oculten.

Si el objetivo es que al pulsar el botón se oculten tanto fines de semana como feriados, deberíamos invertir la condición para que:
• Cuando showWeekends sea true se incluyan los fines de semana en la lista de ignorados (al mostrarse el botón "Hide Weekends")
• Y viceversa, si se quiere mostrarlos, no se debe incluir 'weekend' en ignoreList.

Por tanto, una posible solución sería invertir la condición de la siguiente manera:

TSX
const ignoreList = showWeekends ? ['weekend', ...getArgentineHolidays()] : getArgentineHolidays();
Con esto: • Si showWeekends es true (se desea ocultar los fines de semana) se estará agregando 'weekend' a la lista junto a los feriados.
• Si es false, se muestran ambos.

Adicionalmente, conviene asegurarse de que el método onWeekendToggle y la forma en que se propaga la actualización de este estado provoque la re-renderización del componente para que la nueva ignoreList se aplique efectivamente al reinicializar la librería que maneja el Gantt.

En resumen, el error radica en la lógica de inversión de la variable showWeekends a la hora de construir ignoreList. Verifica también que la librería del Gantt interprete correctamente el valor "weekend" en la lista de ignorados.
You said: Ademas, no deberia ser facil? se que
Ademas, no deberia ser facil? se que estamos usando https://frappe.io/gantt y ahi dice Mark holidays - or ignore them.
Gantt charts are often used in companies, so there should be a way to visually mark, if not ignore, weekends and public holidays.
Frappe Gantt supports this out of the box. Holidays can be shown in different colors, or you can exclude them entirely from progress calculations and tasks.

Pero no esta pudiendo hacer algo que deberia ser nativo no?

Copilot said: Frappe Gantt incluye funcionalidades para marcar o
Frappe Gantt incluye funcionalidades para marcar o ignorar días como fines de semana y feriados, lo que significa que, en teoría, debería ser posible usarlos de forma nativa para distinguirlos o excluirlos de ciertos cálculos.

En tu implementación se está utilizando la propiedad "ignore" para definir cuáles fechas (o elementos) se deben omitir, y la propiedad "holidays" para aplicar un formato específico. Es decir, se hace algo similar a:

TypeScript
const ignoreList = showWeekends ? getArgentineHolidays() : ['weekend', ...getArgentineHolidays()];

const ganttOptions: any = {
  view_mode: timelineScale,
  date_format: 'YYYY-MM-DD',
  language: 'en',
  readonly: false,
  show_today_line: true,
  ignore: ignoreList,
  holidays: {
    'rgba(255, 0, 0, 0.2)': getArgentineHolidays()
  },
  on_click: (task: any) => {
    // ...
  },
};
La lógica actual indica que:

• Cuando showWeekends es true, la lista de ignorados solo incluye los feriados. • Cuando showWeekends es false, se añade además el string 'weekend' para excluir también los fines de semana.

Esto significa que, de acuerdo a la opción nativa de Frappe Gantt, no es necesario reescribir una funcionalidad compleja. Sin embargo, puede parecer contradictorio si consideramos la semántica del botón ("Show Weekends" vs "Hide Weekends") e invertir el valor del estado para la configuración.

Si lo que buscas es que se muestren o se marquen visualmente los días correspondientes a fines de semana y feriados, o incluso ignorarlos de los cálculos, deberás asegurarte de que:

El estado (showWeekends) refleje correctamente la intención (por ejemplo, si true indica que se deben marcar/incluir o ignorar esos días).
La propiedad "ignore" se construya de manera acorde. Por ejemplo, podrías invertir la condición para que: • Si se quieren ocultar fines de semana y feriados, se incluyan en la lista de ignorados. • Si se quieren mostrar (o marcar de otro modo), se manejan a través de la propiedad "holidays".
Una posible solución sería ajustar la asignación de ignoreList, por ejemplo:

TypeScript
const ignoreList = showWeekends ? ['weekend', ...getArgentineHolidays()] : getArgentineHolidays();
De esa manera, cuando showWeekends es true (y se espera "Hide Weekends" activado) se añaden los fines de semana a la lista de ignorados. Esto dejará a Frappe Gantt la tarea de aplicar la lógica nativa de marcar o excluir esos días.

En resumen, la función de marcar o ignorar días es nativa en Frappe Gantt, pero la implementación en tu código puede estar invertida o configurada de forma confusa. Revisa el comportamiento de showWeekends y asegúrate de que la lista "ignore" se construya de acuerdo con la intención del usuario.